# # .github/workflows/ci-cd-vercel.yml

# name: Vercel CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   # --- JOB 1: Test Backend ---
#   # This job remains UNCHANGED. It's still a best practice to test your backend code
#   # before any deployment happens, even if it's not deployed by this pipeline.
#   test-backend:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Set up Python 3.11
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'
#           cache: 'pip'
#       - name: Install Python dependencies
#         run: pip install -r backend/requirements.txt
#       - name: Run Django Tests
#         env:
#           SECRET_KEY: 'a-dummy-secret-key-for-testing'
#           DEBUG: 'True'
#           DATABASE_URL: 'sqlite:///db.sqlite3'
#         run: |
#           cd backend
#           python manage.py test

#   # --- JOB 2: Test Frontend ---
#   # This job also remains UNCHANGED. We always want to test the frontend.
#   test-frontend:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Set up Node.js 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
#           cache-dependency-path: frontend/package-lock.json
#       - name: Install Node dependencies
#         run: |
#           cd frontend
#           npm ci
#       - name: Run Frontend Build Check
#         run: |
#           cd frontend
#           npm run build

#   # --- JOB 3: Deploy Frontend to Vercel ---
#   # The deployment job itself is UNCHANGED, but its *purpose* has changed.
#   # It now only deploys the frontend because of our updated vercel.json.
#   deploy-frontend-to-vercel:
#     runs-on: ubuntu-latest
#     needs: [test-backend, test-frontend] # Only run if both tests pass

#     steps:
#         - name: Checkout code
#           uses: actions/checkout@v4
#         - name: Deploy to Vercel
#           uses: amondnet/vercel-action@v25
#           with:
#             vercel-token: ${{ secrets.VERCEL_TOKEN }}
#             vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
#             vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}


name: Vercel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # --- JOB 1: Test Backend ---
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          
      - name: Run Django Tests
        env:
          # --- THESE ARE YOUR EXISTING, CORRECT VARIABLES ---
          SECRET_KEY: 'django-insecure-test-key-for-ci-only'
          DEBUG: 'True'
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/test_db'          
          # --- ADD THESE LINES ---
          # Provide dummy values for the tests. The value doesn't matter, it just needs to exist.
          STRIPE_PUBLISHABLE_KEY: 'pk_test_dummykeyfortesting'
          STRIPE_SECRET_KEY: 'sk_test_dummykeyfortesting'
          GEMINI_API_KEY: 'dummy-gemini-api-key-for-ci'
        run: |
          cd backend/backend
          python manage.py migrate
          python manage.py test

  # --- JOB 2: Test Frontend ---
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install Node dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run Frontend Tests (if any)
        run: |
          cd frontend
          npm run test --if-present
          
      - name: Run Frontend Build Check
        run: |
          cd frontend
          npm run build

  # --- JOB 3: Deploy Frontend to Vercel ---
  deploy-frontend-to-vercel:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main' # Only deploy on main branch
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod' # Deploy to production