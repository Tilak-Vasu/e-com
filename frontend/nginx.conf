# # frontend/nginx.conf

# server {
#     # Listen on port 80, the standard HTTP port inside the container
#     listen 80;

#     # Set the root directory to where our React app was built
#     root /usr/share/nginx/html;

#     # This is the default file to serve for a directory request
#     index index.html;

#     # This is a crucial block for single-page applications (SPAs) like React.
#     # It ensures that if a user directly navigates to a URL like /products/123,
#     # Nginx will serve the main index.html file, allowing React Router to handle the routing.
#     location / {
#         try_files $uri /index.html;
#     }

    
#     # --- This is the reverse proxy for your Django API ---
#     # Any request that starts with /api will be forwarded to your backend service.
#     location /api/ {
#         # 'backend' is the name of our Django service defined in docker-compose.yml
#         # Docker's internal DNS will resolve this to the backend container's IP address.
#         proxy_pass http://backend:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#     # Proxy for WebSocket connections (for your live chat)
#     location /ws/ {
#         proxy_pass http://backend:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#     }
# }


# frontend/nginx.conf

server {
    # Listen on the standard HTTP port inside the container.
    listen 80;

    # Set the root directory to where our React app was built.
    root /usr/share/nginx/html;
    index index.html;

    # Allow for larger file uploads (e.g., up to 10MB) for admin forms.
    client_max_body_size 10M;

    # Fallback for React Router (Single-Page Application support).
    location / {
        try_files $uri /index.html;
    }

    # --- Proxy for user-uploaded media files ---
    # This forwards requests for images to the Django backend.
    location /media/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Reverse proxy for your Django API.
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Reverse proxy for WebSocket connections (for live chat).
    location /ws/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}